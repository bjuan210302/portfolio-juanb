---
const { class: className, ...attributes } = Astro.props;
---

<script>
    const cid = document
        .querySelector("main")!
        .getAttributeNames()
        .find((a) => a.startsWith("data-astro-cid"))!;
    class TextScramble {
        el;
        chars;
        queue: any[] = [];
        resolve: any;
        frameRequest: any;
        frame: any;
        constructor(el: HTMLElement) {
            this.el = el;
            this.chars = "!<>-_\\/[]{}â€”=+*^?#________";
            this.update = this.update.bind(this);
        }
        setText(newText: string) {
            const oldText = this.el.innerText;
            const length = Math.max(oldText.length, newText.length);
            const promise = new Promise((resolve) => (this.resolve = resolve));
            this.queue = [];
            for (let i = 0; i < length; i++) {
                const from = oldText[i] || "";
                const to = newText[i] || "";
                const start = Math.floor(Math.random() * 40);
                const end = start + Math.floor(Math.random() * 40);
                this.queue.push({ from, to, start, end });
            }
            cancelAnimationFrame(this.frameRequest);
            this.frame = 0;
            this.update();
            return promise;
        }
        update() {
            let output = "";
            let complete = 0;
            for (let i = 0, n = this.queue.length; i < n; i++) {
                let { from, to, start, end, char } = this.queue[i];
                if (this.frame >= end) {
                    complete++;
                    output += to;
                } else if (this.frame >= start) {
                    if (!char || Math.random() < 0.25) {
                        char = this.randomChar();
                        this.queue[i].char = char;
                    }
                    const r365 = Math.floor(Math.random() * 366);
                    output += `<span style="color: hsl(${r365}, 60%, 60%, 1);" ${cid}>${char}</span>`;
                } else {
                    output += from;
                }
            }
            this.el.innerHTML = output;
            if (complete === this.queue.length) {
                this.resolve();
            } else {
                this.frameRequest = requestAnimationFrame(this.update);
                this.frame++;
            }
        }
        randomChar() {
            return this.chars[Math.floor(Math.random() * this.chars.length)];
        }
    }

    const phrases = [
        "moderno",
        "escalable",
        "eficiente",
        "robusto",
        "seguro",
        "mantenible",
    ];

    const el = document.querySelector(".phrases") as HTMLElement;
    const fx = new TextScramble(el);

    let counter = 0;
    const next = () => {
        fx.setText(phrases[counter]).then(() => {
            setTimeout(next, 800);
        });
        counter = (counter + 1) % phrases.length;
    };

    document.addEventListener("DOMContentLoaded", function () {
        setTimeout(next, 450);
    });
    document.addEventListener("DOMContentLoaded", function () {
        var text = document.querySelector(".anim-text")!;

        setTimeout(() => text.classList.remove("anim-hidden"), 500);
        window.addEventListener("scroll", function () {
            var scroll = window.scrollY;

            if (scroll >= 20) {
                text.classList.add("anim-hidden");
            } else {
                text.classList.remove("anim-hidden");
            }
        });
    });
</script>

<main class="h-screen flex flex-col justify-center mx-auto max-w-[55%]">
    <!-- <nav class="flex flex-row justify-end pt-[3%] text-[#777]">
        <a
            href=""
            class="ml-8 border-[#222] border-b hover:border-white hover:text-[#999] transition-all"
            >Proyectos</a
        >
        <a
            href=""
            class="ml-8 border-[#222] border-b hover:border-white hover:text-[#999] transition-all"
            >Habilidades</a
        >
        <a
            href=""
            class="ml-8 border-[#222] border-b hover:border-white hover:text-[#999] transition-all"
            >Blog</a
        >
        <a
            href=""
            class="ml-8 border-[#222] border-b hover:border-white hover:text-[#999] transition-all"
            >ES/EN</a
        >
    </nav> -->
    <div class="m-auto w-fit">
        <span class="subtitle">Hola ðŸ‘‹, mi nombre es</span>
        <div
            class="anim-text anim-hidden anim-text-flow min-w-full text-center"
        >
            <li>J</li>
            <li>u</li>
            <li>a</li>
            <li>n</li>

            <li class="spaced">B</li>
            <li class="ghost">u</li>
            <li class="ghost">s</li>
            <li class="ghost">t</li>
            <li class="ghost">a</li>
            <li class="ghost">m</li>
            <li class="ghost">a</li>
            <li class="ghost">n</li>
            <li class="ghost">t</li>
            <li class="ghost">e</li>
            <li class="ghost">.</li>
        </div>
        <div class="subtitle bottom">
            <span>software&nbsp</span>
            <span class="phrases">moderno</span>
        </div>
    </div>

    <div
        class="pb-[3%] flex gap-10 justify-center max-h-10 md:max-h-12 2xl:max-h-16"
    >
        <a class="social" href="https://github.com/bjuan210302" target="_blank">
            <svg
                xmlns="http://www.w3.org/2000/svg"
                width="auto"
                height="100%"
                viewBox="0 0 64 64"
                fill="currentColor"
            >
                <path
                    d="M32 6C17.641 6 6 17.641 6 32c0 12.277 8.512 22.56 19.955 25.286-.592-.141-1.179-.299-1.755-.479V50.85c0 0-.975.325-2.275.325-3.637 0-5.148-3.245-5.525-4.875-.229-.993-.827-1.934-1.469-2.509-.767-.684-1.126-.686-1.131-.92-.01-.491.658-.471.975-.471 1.625 0 2.857 1.729 3.429 2.623 1.417 2.207 2.938 2.577 3.721 2.577.975 0 1.817-.146 2.397-.426.268-1.888 1.108-3.57 2.478-4.774-6.097-1.219-10.4-4.716-10.4-10.4 0-2.928 1.175-5.619 3.133-7.792C19.333 23.641 19 22.494 19 20.625c0-1.235.086-2.751.65-4.225 0 0 3.708.026 7.205 3.338C28.469 19.268 30.196 19 32 19s3.531.268 5.145.738c3.497-3.312 7.205-3.338 7.205-3.338.567 1.474.65 2.99.65 4.225 0 2.015-.268 3.19-.432 3.697C46.466 26.475 47.6 29.124 47.6 32c0 5.684-4.303 9.181-10.4 10.4 1.628 1.43 2.6 3.513 2.6 5.85v8.557c-.576.181-1.162.338-1.755.479C49.488 54.56 58 44.277 58 32 58 17.641 46.359 6 32 6zM33.813 57.93C33.214 57.972 32.61 58 32 58 32.61 58 33.213 57.971 33.813 57.93zM37.786 57.346c-1.164.265-2.357.451-3.575.554C35.429 57.797 36.622 57.61 37.786 57.346zM32 58c-.61 0-1.214-.028-1.813-.07C30.787 57.971 31.39 58 32 58zM29.788 57.9c-1.217-.103-2.411-.289-3.574-.554C27.378 57.61 28.571 57.797 29.788 57.9z"
                ></path>
            </svg>
            <span>@bjuan210302</span>
        </a>
        <a class="social" href="https://www.linkedin.com/in/juan-bustamante-8778a2253/" target="_blank">
            <svg
                xmlns="http://www.w3.org/2000/svg"
                width="auto"
                height="100%"
                viewBox="0 0 50 50"
                fill="currentColor"
            >
                <path
                    d="M41,4H9C6.24,4,4,6.24,4,9v32c0,2.76,2.24,5,5,5h32c2.76,0,5-2.24,5-5V9C46,6.24,43.76,4,41,4z M17,20v19h-6V20H17z M11,14.47c0-1.4,1.2-2.47,3-2.47s2.93,1.07,3,2.47c0,1.4-1.12,2.53-3,2.53C12.2,17,11,15.87,11,14.47z M39,39h-6c0,0,0-9.26,0-10 c0-2-1-4-3.5-4.04h-0.08C27,24.96,26,27.02,26,29c0,0.91,0,10,0,10h-6V20h6v2.56c0,0,1.93-2.56,5.81-2.56 c3.97,0,7.19,2.73,7.19,8.26V39z"
                ></path>
            </svg>
            <span>juan.bustamante</span>
        </a>
        <a class="social" href="mailto:bjuan210302@gmail.com" target="_blank">
            <svg
                xmlns="http://www.w3.org/2000/svg"
                width="auto"
                height="100%"
                viewBox="0 0 50 50"
                fill="currentColor"
            >
                <path
                    d="M12 23.403V23.39 10.389L11.88 10.3h-.01L9.14 8.28C7.47 7.04 5.09 7.1 3.61 8.56 2.62 9.54 2 10.9 2 12.41v3.602L12 23.403zM38 23.39v.013l10-7.391V12.41c0-1.49-.6-2.85-1.58-3.83-1.46-1.457-3.765-1.628-5.424-.403L38.12 10.3 38 10.389V23.39zM14 24.868l10.406 7.692c.353.261.836.261 1.189 0L36 24.868V11.867L25 20l-11-8.133V24.868zM38 25.889V41c0 .552.448 1 1 1h6.5c1.381 0 2.5-1.119 2.5-2.5V18.497L38 25.889zM12 25.889L2 18.497V39.5C2 40.881 3.119 42 4.5 42H11c.552 0 1-.448 1-1V25.889z"
                ></path>
            </svg>
            <span>bjuan210302@gmail.com</span>
        </a>
    </div>
</main>

<style lang="scss">
    @import "https://fonts.googleapis.com/css?family=Roboto+Mono:300,400";

    .subtitle {
        font-size: clamp(1rem, 1.7vw, 2rem);
        font-family: "Roboto Mono", monospace;
        font-weight: 300;
        color: #777;
    }
    .bottom {
        text-align: center;
    }

    .social {
        width: fit-content;
        text-decoration: none;
        display: flex;
        flex-direction: row;
        align-items: center;

        color: #777;
        font-weight: 400;
    }
    .social > span {
        padding-left: 0.5em;
    }

    .phrases .dud {
        color: hsla(random(365), 60%, 60%, 1);
    }
    .anim-text {
        min-height: 0vw;
        font-size: clamp(2.5rem, -1.5rem + 8vw, 7rem);
        list-style: none;
        border-bottom: 0;
        padding-bottom: 10px;
    }
    .anim-text li {
        display: inline-block;
        font-weight: 700;
        transition: all 0.4s ease-out;
        max-width: 2em;
    }
    .anim-text.anim-hidden li.spaced {
        padding-left: 0;
    }
    .anim-text li.spaced {
        padding-left: 0.5em;
    }
    .anim-text.anim-hidden .ghost,
    .subtitle:has(+ .anim-text.anim-hidden) {
        opacity: 0;
        max-width: 0;
    }

    // Colors
    .anim-text-flow,
    .anim-text-flow-hover:hover {
        /*
   * Animation variables
   */
        $animationSteps: 20;
        $animationDuration: 50;
        $animationElement: li;
        $animationElementsCount: 100;
        $delayBetweenLetters: 0.2;

        /*
   * Elements settings
   */
        #{$animationElement} {
            animation-name: anim-text-flow-keys;
            animation-duration: #{$animationDuration}s;
            animation-iteration-count: infinite;
            animation-direction: alternate;
            animation-fill-mode: forwards;
        }

        /*
   * Keyframe loop
   */
        @keyframes anim-text-flow-keys {
            @for $i from 0 through $animationSteps {
                #{percentage($i * calc(1 / $animationSteps))} {
                    color: hsla(random(365), 60%, 60%, 1);
                }
            }
        }

        /*
   * Element animation delay loop
   */
        $totalDelayTime: $animationElementsCount * $delayBetweenLetters;

        @for $i from 1 through $animationElementsCount {
            #{$animationElement}:nth-of-type(#{$i}) {
                animation-delay: #{($i * $delayBetweenLetters) -
                    $totalDelayTime}s;
            }
        }
    }
</style>
